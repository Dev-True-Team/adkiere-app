import { type NextPage } from "next";
import Image from 'next/image'
import Head from "next/head";
import { signIn, signOut, useSession } from "next-auth/react";

import { api } from "../utils/api";
import Navbar from "../../components/Navbar";
import Footer from "../../components/Footer";
import Seccion1 from "../../components/Seccion1";
import Seccion2 from "../../components/Seccion2";
import Seccion3 from "../../components/Seccion3";


const Home: NextPage = () => {
  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar ></Navbar>
      <Seccion1></Seccion1>
      <Seccion2></Seccion2>
      <Seccion3></Seccion3>
      {/* <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
          
          <div className="flex flex-col items-center gap-2">
            <AuthShowcase />
          </div>
        </div>
      </main> */}
      {/* <AuthShowcase /> */}
      <Footer></Footer>
    </>
  );
};

export default Home;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: Houses } = api.House.getHouses.useQuery({
    limit: 100,
  });

  const { mutate: createHouse, data } = api.House.createHouse.useMutation();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <p className="text-center text-2xl text-black">
        {Houses?.houses && (
          <div className="flex flex-col gap-y-4">
            {Houses.houses.map((house) => (
              <div key={house.id} className="grid grid-cols-4 gap-x-2">
                <div className="border-2 border-black p-4">
                  {house.propertyData.title}
                </div>
                <div className="border-2 border-black p-4">
                  {house.propertyData.description}
                </div>
                <div className="border-2 border-black p-4">
                  {house.propertyData.price}
                </div>
                <div className="border-2 border-black p-4">
                  {house.propertyData.location.country}
                </div>
                {house.propertyData.images?.[0]?.url && (
          <Image
            src={house.propertyData.images[0].url}
            width={500}
            height={500}
            alt="Picture of the author"
          />
        )}
              </div>
            ))}
          </div>
        )}
      </p>
      <button
        className="rounded-full bg-white px-10 py-3 font-semibold text-black no-underline transition hover:bg-gray-200" 
        onClick={() => {
          for (let i = 19; i < 20; i++) {
            createHouse({
              propertyData: {
                title: "Casa Campo Verde",
                description: "Casa en venta en Campo Verde, Tegucigalpa",
                price: 1000 + i,
                images:[{url:"https://images.pexels.com/photos/259588/pexels-photo-259588.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=2", key:"as"}],
                location: {
                  country: "Honduras",
                  state: "Francisco Morazan",
                  city: "Tegucigalpa",
                  neighborhood: "Campo Verde",
                  street: "Zona 2",
                  zipCode: "test",
                  latitude: 11,
                  longitude: 11,
                },
                propertyStatus: "SALE",
                totalRods: 111,
                totalConstructionRods: 20,
                totalMeters: 78,
                totalConstructionMeters: 11,
              },
              housingData: {
                bedrooms: 3,
                bathrooms: 2,
                floors: 2,
                year: 1,
                remodeled: 1,
                cistern: true,
                water: true,
                electricity: true,
                gas: true,
                furnished: true,
                terrace: false,
              },
              garage: true,
              pool: true,
              garden: true,
              houseType: "HOUSE",
            });
          }
        }}
      >
        create house
      </button>
      {data && (
        <p className="font-semibold text-black no-underline">
          {data.house && data.house.id}
        </p>
      )}
      <button
        className="rounded-full bg-white px-10 py-3 font-semibold text-black no-underline transition hover:bg-gray-200" 
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};